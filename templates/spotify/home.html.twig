{% extends 'base.html.twig' %}

{% block title %}üè† Accueil | Spotify{% endblock %}

{% block stylesheets %}
<style>
    body {
        background-color: #121212;
        color: #fff;
        font-family: Arial, sans-serif;
    }
    .main-container {
        display: flex;
        max-width: 1400px;
        margin: auto;
        padding: 20px;
    }

     /* ---- Barre de recherche ---- */
    .search-bar {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: none;
        border-radius: 5px;
        background: #282828;
        color: #fff;
        font-size: 1rem;
    }
    .search-bar::placeholder {
        color: #b3b3b3;
    }

    /* ---- Biblioth√®que (gauche) ---- */
    .sidebar {
        width: 300px;
        background: #000;
        padding: 20px;
        border-radius: 10px;
        height: 85vh;
        overflow-y: auto;
    }
    .sidebar h2 {
        font-size: 1.3rem;
        color: #1DB954;
        margin-bottom: 15px;
    }
    .album-list {
        list-style: none;
        padding: 0;
    }
    .album-list li {
        display: flex;
        align-items: center;
        padding: 10px;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s ease;
    }
    .album-list li:hover {
        background: #282828;
    }

/* Supprime la couleur bleue des liens */
    .album-link {
        text-decoration: none;
        color: inherit;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .album-link:hover {
        color: inherit;
    }

    .album-item img {
        width: 50px;
        height: 50px;
        border-radius: 5px;
    }
    .album-item {
        display: flex;
        align-items: center;
        gap: 10px;
        background: #282828;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 10px;
        transition: transform 0.2s ease, background 0.2s ease;
    }

.album-item:hover {
        transform: scale(1.05);
        background: #333;
    }
    .album-info {
        flex-grow: 1;
    }
    .album-info h4 {
        font-size: 0.9rem;
        margin: 0;
    }
  .album-info p {
        font-size: 0.9rem;
        color: #b3b3b3;
    }

  .album-info h4, .album-info p {
        margin: 0;
        font-size: 1rem;
        color: white;
        font-family: Arial, sans-serif;
    }

    /* ---- Contenu principal (droite) ---- */
    .content {
        flex-grow: 1;
        margin-left: 20px;
    }
    .banner {
        background: linear-gradient(45deg, #333, #1DB954);
        padding: 20px;
        border-radius: 10px;
        text-align: center;
    }
    .banner h1 {
        font-size: 2rem;
        margin: 0;
    }

    .library-container a {
        position: relative;
        text-decoration: none;
        color: inherit;
    }

    .library-container a::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: -3px;
        width: 100%;
        height: 2px;
        background-color: #1DB954;
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 0.3s ease-in-out;
    }

    .library-container a:hover::after {
        transform: scaleX(1);
    }

    /* ---- Cat√©gories ---- */
    .categories {
        margin-top: 30px;
    }
    .categories h2 {
        font-size: 1.5rem;
        margin-bottom: 15px;
    }
   .category-grid {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        justify-content: center;
    }
     .category {
        padding: 15px;
        background: #282828;
        border-radius: 10px;
        text-align: center;
        text-decoration: none;
        color: white;
        transition: background 0.3s ease;
    }

    .category:hover {
        background: #1DB954;
        transform: translateY(-5px);
    }

    /* ---- Recommandations ---- */
    .recommendations {
        margin-top: 30px;
    }
    .recommendations h2 {
        font-size: 1.5rem;
        margin-bottom: 15px;
    }
    .rec-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 15px;
    }
    .rec-item {
        background: #282828;
        padding: 15px;
        border-radius: 10px;
        text-align: center;
        cursor: pointer;
        transition: transform 0.3s ease;
    }
    .rec-item:hover {
        transform: scale(1.05);
    }
    .rec-item img {
        width: 100%;
        border-radius: 10px;
        margin-bottom: 10px;
    }

    <style>
     .global-search {
        margin-top: 20px;
        padding: 10px;
        background: #282828;
        border-radius: 10px;
    }
    .search-bar {
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 5px;
        background: #333;
        color: #fff;
        font-size: 1rem;
    }
    .search-results {
        list-style: none;
        padding: 0;
        margin-top: 10px;
    }
    .search-results li {
        display: flex;
        align-items: center;
        padding: 10px;
        background: #1c1c1c;
        border-radius: 5px;
        margin-bottom: 5px;
        cursor: pointer;
        transition: background 0.3s ease;
    }
    .search-results li:hover {
        background: #1DB954;
    }
    .search-results img {
        border-radius: 5px;
        margin-right: 10px;
    }
</style>
{% endblock %}

{% block body %}
<div class="main-container">
    <!-- Sidebar - Biblioth√®que -->
    <aside class="sidebar">
        <h2>üìö Ma Biblioth√®que</h2>
        <input type="text" id="searchInput" class="search-bar" placeholder="üîç Rechercher un album...">
        <ul class="album-list">
            {% for item in albums %}
                <li class="album-item">
                    <a href="/album/{{ item.album.id }}" class="album-link">
                        <img src="{{ item.album.images[0].url }}" alt="{{ item.album.name }}">
                        <div class="album-info">
                            <h4>{{ item.album.name }}</h4>
                            <p>{{ item.album.artists[0].name }}</p>
                        </div>
                    </a>
                </li>
            {% endfor %}
        </ul>
    </aside>
</div>


    <!-- Contenu principal -->
    <section class="content">
        <div class="banner">
            <h1>üéµ Bienvenue sur SpyMusic</h1>
            <p>Achetez Vos Projets Pr√©f√©r√©s De Vos Artistes Pr√©f√©r√©s !</p>
        </div>
       

    <!-- üîπ Recherche d'albums -->
<div class="global-search">
    <h2>üîç Rechercher un album</h2>
    <input type="text" id="globalSearchInput" class="search-bar" placeholder="Entrez un album...">
    <ul class="search-results" id="searchResults"></ul>
</div>






<!-- üîπ Script pour la recherche dynamique -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let searchInput = document.getElementById("searchInput");
        let albumItems = document.querySelectorAll(".album-item");

        searchInput.addEventListener("keyup", function () {
            let filter = searchInput.value.toLowerCase();

            albumItems.forEach(album => {
                let title = album.querySelector("h4").innerText.toLowerCase();
                let artist = album.querySelector("p").innerText.toLowerCase();

                if (title.includes(filter) || artist.includes(filter)) {
                    album.style.display = "flex"; // ‚úÖ Afficher l'√©l√©ment correspondant
                } else {
                    album.style.display = "none"; // ‚ùå Cacher les non correspondants
                }
            });
        });
    });
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let globalSearchInput = document.getElementById("globalSearchInput");
    let searchResults = document.getElementById("searchResults");
    let selectedGenre = document.getElementById("selectedGenre");
    let artistResults = document.getElementById("artistResults");
    let recommendationsSection = document.getElementById("recommendationsSection");
    let categoriesSection = document.getElementById("categoriesSection");

    // üîπ Recherche d'albums
    globalSearchInput.addEventListener("keyup", function () {
        let query = globalSearchInput.value.trim();
        if (query.length > 2) {
            fetch(`/spotify/search?q=${query}`)
                .then(response => response.json())
                .then(data => {
                    searchResults.innerHTML = "";
                    if (!data.albums || data.albums.length === 0) {
                        searchResults.innerHTML = "<li>Aucun album trouv√©</li>";
                        return;
                    }
                    data.albums.forEach(album => {
                        let li = document.createElement("li");
                        li.innerHTML = `
                            <img src="${album.image}" alt="${album.title}" width="50">
                            <div>
                                <strong>${album.title}</strong> - ${album.artist}
                                <a href="${album.url}" target="_blank">üéß √âcouter</a>
                            </div>
                        `;
                        searchResults.appendChild(li);
                    });

                    // üîπ Assurer que les cat√©gories et recommandations restent visibles
                    categoriesSection.style.display = "block";
                    recommendationsSection.style.display = "block";
                })
                .catch(error => console.error("Erreur de recherche :", error));
        } else {
            searchResults.innerHTML = "";
            categoriesSection.style.display = "block";
            recommendationsSection.style.display = "block";
        }
    });

    // üîπ G√©rer le clic sur les cat√©gories
    document.querySelectorAll(".category").forEach(category => {
        category.addEventListener("click", function () {
            let genre = this.getAttribute("data-genre");
            selectedGenre.innerText = this.innerText;
            recommendationsSection.style.display = "block";

            fetch(`/spotify/recommendations?genre=${genre}`)
                .then(response => response.json())
                .then(data => {
                    artistResults.innerHTML = "";
                    if (!data.artists || data.artists.length === 0) {
                        artistResults.innerHTML = "<p>Aucun artiste trouv√©</p>";
                        return;
                    }
                    data.artists.forEach(artist => {
                        let div = document.createElement("div");
                        div.classList.add("artist-item");
                        div.innerHTML = `
                            <img src="${artist.image}" alt="${artist.name}">
                            <h4>${artist.name}</h4>
                            <a href="${artist.url}" target="_blank">üéß √âcouter</a>
                        `;
                        artistResults.appendChild(div);
                    });

                    // üîπ S'assurer que les sections restent visibles
                    categoriesSection.style.display = "block";
                    recommendationsSection.style.display = "block";
                })
                .catch(error => console.error("Erreur de r√©cup√©ration des artistes :", error));
        });
    });
  });
</script>
{% endblock %}
